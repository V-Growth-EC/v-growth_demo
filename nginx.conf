# Nginx 設定檔 for Next.js App on EC2
# 適用於 demo3.edu-cart.jp

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # 上游伺服器設定
    upstream nextjs_backend {
        server 127.0.0.1:3000;
        keepalive 32;
    }

    # 只保留一個 HTTP 80 轉 HTTPS block
    server {
        listen 80;
        server_name demo3.edu-cart.jp www.demo3.edu-cart.jp;

        # Let's Encrypt 驗證路徑
        location /.well-known/acme-challenge/ {
            root /var/www/next-app/public;
            try_files $uri =404;
        }

        # 健康檢查路徑
        location /healthz {
            return 200 'ok';
            add_header Content-Type text/plain;
        }

        # 其他所有 HTTP 請求重定向到 HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 主要設定
    server {
        listen 443 ssl http2;
        server_name demo3.edu-cart.jp www.demo3.edu-cart.jp;

        # SSL 配置（Let's Encrypt 會自動設定）
        ssl_certificate /etc/letsencrypt/live/demo3.edu-cart.jp/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/demo3.edu-cart.jp/privkey.pem;

        # SSL 安全設定
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 安全標頭
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 靜態檔案快取設定
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://nextjs_backend;
        }

        # Next.js 應用代理
        location / {
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # 超時設定
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 緩衝設定
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # API 路由特殊處理
        location /api/ {
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # API 不快取
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # 健康檢查端點
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 錯誤頁面
        error_page 404 /404;
        error_page 500 502 503 504 /50x;

        # 日誌設定
        access_log /var/log/nginx/demo3.edu-cart.jp.access.log;
        error_log /var/log/nginx/demo3.edu-cart.jp.error.log;
    }
} 